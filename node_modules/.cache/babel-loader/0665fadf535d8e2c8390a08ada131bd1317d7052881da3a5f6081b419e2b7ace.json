{"ast":null,"code":"import { calculateAngle } from '../utils/formulas';\nimport createFlyingObjects from './createFlyingObjects';\nimport moveBalls from './moveCannonBalls';\nimport checkCollisions from './checkCollisions';\nfunction moveObjects(state, action) {\n  let cannonBalls = moveBalls(state.gameState.cannonBalls);\n  const mousePosition = action.mousePosition || {\n    x: 0,\n    y: 0\n  };\n  const newState = createFlyingObjects(state);\n  const now = new Date().getTime();\n  const flyingObjects = newState.gameState.flyingObjects.filter(object => now - object.createdAt < 4000);\n  const lostLife = state.gameState.flyingObjects.length > flyingObjects.length;\n  let lives = state.gameState.lives;\n  if (lostLife) {\n    lives--;\n  }\n  const started = lives > 0;\n  if (!started) {\n    flyingObjects = [];\n    cannonBalls = [];\n    lives = 3;\n  }\n  const {\n    x,\n    y\n  } = mousePosition;\n  const angle = calculateAngle(0, 0, x, y);\n  const objectsDestroyed = checkCollisions(cannonBalls, flyingObjects);\n  const cannonBallsDestroyed = objectsDestroyed.map(object => object.cannonBallId);\n  const flyingDiscsDestroyed = objectsDestroyed.map(object => object.flyingDiscId);\n  cannonBalls = cannonBalls.filter(cannonBall => cannonBallsDestroyed.indexOf(cannonBall.id));\n  flyingObjects = flyingObjects.filter(flyingDisc => flyingDiscsDestroyed.indexOf(flyingDisc.id));\n  const kills = state.gameState.kills + flyingDiscsDestroyed.length;\n  return {\n    ...newState,\n    gameState: {\n      ...newState.gameState,\n      flyingObjects,\n      cannonBalls: [...cannonBalls],\n      lives,\n      started,\n      kills\n    },\n    angle\n  };\n}\nexport default moveObjects;","map":{"version":3,"names":["calculateAngle","createFlyingObjects","moveBalls","checkCollisions","moveObjects","state","action","cannonBalls","gameState","mousePosition","x","y","newState","now","Date","getTime","flyingObjects","filter","object","createdAt","lostLife","length","lives","started","angle","objectsDestroyed","cannonBallsDestroyed","map","cannonBallId","flyingDiscsDestroyed","flyingDiscId","cannonBall","indexOf","id","flyingDisc","kills"],"sources":["C:/Users/dibya/OneDrive/Desktop/VS code/aliens-go-home/src/reducers/moveObjects.js"],"sourcesContent":["import { calculateAngle } from '../utils/formulas';\r\nimport createFlyingObjects from './createFlyingObjects';\r\nimport moveBalls from './moveCannonBalls';\r\nimport checkCollisions from './checkCollisions';\r\n\r\nfunction moveObjects(state, action) {\r\n\r\n  let cannonBalls = moveBalls(state.gameState.cannonBalls);\r\n  const mousePosition = action.mousePosition || {\r\n    x: 0,\r\n    y: 0,\r\n  };\r\n\r\n  const newState = createFlyingObjects(state);\r\n\r\n  const now = (new Date()).getTime();\r\n  const flyingObjects = newState.gameState.flyingObjects.filter(object => (\r\n    (now - object.createdAt) < 4000\r\n  ));\r\n\r\n  const lostLife = state.gameState.flyingObjects.length > flyingObjects.length;\r\n  let lives = state.gameState.lives;\r\n  if (lostLife) {\r\n    lives--;\r\n  }\r\n  const started = lives > 0;\r\n  if (!started) {\r\n    flyingObjects = [];\r\n    cannonBalls = [];\r\n    lives = 3;\r\n  }\r\n\r\n  const { x, y } = mousePosition;\r\n  const angle = calculateAngle(0, 0, x, y);\r\n  const objectsDestroyed = checkCollisions(cannonBalls, flyingObjects);\r\n  const cannonBallsDestroyed = objectsDestroyed.map(object => (object.cannonBallId));\r\n  const flyingDiscsDestroyed = objectsDestroyed.map(object => (object.flyingDiscId));\r\n\r\n  cannonBalls = cannonBalls.filter(cannonBall => (cannonBallsDestroyed.indexOf(cannonBall.id)));\r\n  flyingObjects = flyingObjects.filter(flyingDisc => (flyingDiscsDestroyed.indexOf(flyingDisc.id)));\r\n\r\n  const kills = state.gameState.kills + flyingDiscsDestroyed.length;\r\n  \r\n  return {\r\n    ...newState,\r\n    gameState: {\r\n      ...newState.gameState,\r\n      flyingObjects,\r\n      cannonBalls: [...cannonBalls],\r\n      lives,\r\n      started,\r\n      kills,\r\n    },\r\n    angle,\r\n  };\r\n}\r\n\r\nexport default moveObjects;"],"mappings":"AAAA,SAASA,cAAc,QAAQ,mBAAmB;AAClD,OAAOC,mBAAmB,MAAM,uBAAuB;AACvD,OAAOC,SAAS,MAAM,mBAAmB;AACzC,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAElC,IAAIC,WAAW,GAAGL,SAAS,CAACG,KAAK,CAACG,SAAS,CAACD,WAAW,CAAC;EACxD,MAAME,aAAa,GAAGH,MAAM,CAACG,aAAa,IAAI;IAC5CC,CAAC,EAAE,CAAC;IACJC,CAAC,EAAE;EACL,CAAC;EAED,MAAMC,QAAQ,GAAGX,mBAAmB,CAACI,KAAK,CAAC;EAE3C,MAAMQ,GAAG,GAAI,IAAIC,IAAI,EAAE,CAAEC,OAAO,EAAE;EAClC,MAAMC,aAAa,GAAGJ,QAAQ,CAACJ,SAAS,CAACQ,aAAa,CAACC,MAAM,CAACC,MAAM,IACjEL,GAAG,GAAGK,MAAM,CAACC,SAAS,GAAI,IAC5B,CAAC;EAEF,MAAMC,QAAQ,GAAGf,KAAK,CAACG,SAAS,CAACQ,aAAa,CAACK,MAAM,GAAGL,aAAa,CAACK,MAAM;EAC5E,IAAIC,KAAK,GAAGjB,KAAK,CAACG,SAAS,CAACc,KAAK;EACjC,IAAIF,QAAQ,EAAE;IACZE,KAAK,EAAE;EACT;EACA,MAAMC,OAAO,GAAGD,KAAK,GAAG,CAAC;EACzB,IAAI,CAACC,OAAO,EAAE;IACZP,aAAa,GAAG,EAAE;IAClBT,WAAW,GAAG,EAAE;IAChBe,KAAK,GAAG,CAAC;EACX;EAEA,MAAM;IAAEZ,CAAC;IAAEC;EAAE,CAAC,GAAGF,aAAa;EAC9B,MAAMe,KAAK,GAAGxB,cAAc,CAAC,CAAC,EAAE,CAAC,EAAEU,CAAC,EAAEC,CAAC,CAAC;EACxC,MAAMc,gBAAgB,GAAGtB,eAAe,CAACI,WAAW,EAAES,aAAa,CAAC;EACpE,MAAMU,oBAAoB,GAAGD,gBAAgB,CAACE,GAAG,CAACT,MAAM,IAAKA,MAAM,CAACU,YAAa,CAAC;EAClF,MAAMC,oBAAoB,GAAGJ,gBAAgB,CAACE,GAAG,CAACT,MAAM,IAAKA,MAAM,CAACY,YAAa,CAAC;EAElFvB,WAAW,GAAGA,WAAW,CAACU,MAAM,CAACc,UAAU,IAAKL,oBAAoB,CAACM,OAAO,CAACD,UAAU,CAACE,EAAE,CAAE,CAAC;EAC7FjB,aAAa,GAAGA,aAAa,CAACC,MAAM,CAACiB,UAAU,IAAKL,oBAAoB,CAACG,OAAO,CAACE,UAAU,CAACD,EAAE,CAAE,CAAC;EAEjG,MAAME,KAAK,GAAG9B,KAAK,CAACG,SAAS,CAAC2B,KAAK,GAAGN,oBAAoB,CAACR,MAAM;EAEjE,OAAO;IACL,GAAGT,QAAQ;IACXJ,SAAS,EAAE;MACT,GAAGI,QAAQ,CAACJ,SAAS;MACrBQ,aAAa;MACbT,WAAW,EAAE,CAAC,GAAGA,WAAW,CAAC;MAC7Be,KAAK;MACLC,OAAO;MACPY;IACF,CAAC;IACDX;EACF,CAAC;AACH;AAEA,eAAepB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}