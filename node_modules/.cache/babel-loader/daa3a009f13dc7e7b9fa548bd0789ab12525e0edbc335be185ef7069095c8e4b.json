{"ast":null,"code":"import{checkCollision}from'../utils/formulas';import{gameHeight}from'../utils/constants';var checkCollisions=function checkCollisions(cannonBalls,flyingDiscs){var objectsDestroyed=[];flyingDiscs.forEach(function(flyingDisc){var currentLifeTime=new Date().getTime()-flyingDisc.createdAt;var calculatedPosition={x:flyingDisc.position.x,y:flyingDisc.position.y+currentLifeTime/4000*gameHeight};var rectA={x1:calculatedPosition.x-40,y1:calculatedPosition.y-10,x2:calculatedPosition.x+40,y2:calculatedPosition.y+10};cannonBalls.forEach(function(cannonBall){var rectB={x1:cannonBall.position.x-8,y1:cannonBall.position.y-8,x2:cannonBall.position.x+8,y2:cannonBall.position.y+8};if(checkCollision(rectA,rectB)){objectsDestroyed.push({cannonBallId:cannonBall.id,flyingDiscId:flyingDisc.id});}});});return objectsDestroyed;};export default checkCollisions;","map":{"version":3,"names":["checkCollision","gameHeight","checkCollisions","cannonBalls","flyingDiscs","objectsDestroyed","forEach","flyingDisc","currentLifeTime","Date","getTime","createdAt","calculatedPosition","x","position","y","rectA","x1","y1","x2","y2","cannonBall","rectB","push","cannonBallId","id","flyingDiscId"],"sources":["C:/Users/dibya/OneDrive/Desktop/VS code/Alien-Go-Home/src/reducers/checkCollisions.js"],"sourcesContent":["import { checkCollision } from '../utils/formulas';\r\nimport { gameHeight } from '../utils/constants';\r\n\r\nconst checkCollisions = (cannonBalls, flyingDiscs) => {\r\n  const objectsDestroyed = [];\r\n  flyingDiscs.forEach((flyingDisc) => {\r\n    const currentLifeTime = (new Date()).getTime() - flyingDisc.createdAt;\r\n    const calculatedPosition = {\r\n      x: flyingDisc.position.x,\r\n      y: flyingDisc.position.y + ((currentLifeTime / 4000) * gameHeight),\r\n    };\r\n    const rectA = {\r\n      x1: calculatedPosition.x - 40,\r\n      y1: calculatedPosition.y - 10,\r\n      x2: calculatedPosition.x + 40,\r\n      y2: calculatedPosition.y + 10,\r\n    };\r\n    cannonBalls.forEach((cannonBall) => {\r\n      const rectB = {\r\n        x1: cannonBall.position.x - 8,\r\n        y1: cannonBall.position.y - 8,\r\n        x2: cannonBall.position.x + 8,\r\n        y2: cannonBall.position.y + 8,\r\n      };\r\n      if (checkCollision(rectA, rectB)) {\r\n        objectsDestroyed.push({\r\n          cannonBallId: cannonBall.id,\r\n          flyingDiscId: flyingDisc.id,\r\n        });\r\n      }\r\n    });\r\n  });\r\n  return objectsDestroyed;\r\n};\r\n\r\nexport default checkCollisions;"],"mappings":"AAAA,OAASA,cAAc,KAAQ,mBAAmB,CAClD,OAASC,UAAU,KAAQ,oBAAoB,CAE/C,GAAM,CAAAC,eAAe,CAAG,QAAlB,CAAAA,eAAeA,CAAIC,WAAW,CAAEC,WAAW,CAAK,CACpD,GAAM,CAAAC,gBAAgB,CAAG,EAAE,CAC3BD,WAAW,CAACE,OAAO,CAAC,SAACC,UAAU,CAAK,CAClC,GAAM,CAAAC,eAAe,CAAI,GAAI,CAAAC,IAAI,EAAE,CAAEC,OAAO,EAAE,CAAGH,UAAU,CAACI,SAAS,CACrE,GAAM,CAAAC,kBAAkB,CAAG,CACzBC,CAAC,CAAEN,UAAU,CAACO,QAAQ,CAACD,CAAC,CACxBE,CAAC,CAAER,UAAU,CAACO,QAAQ,CAACC,CAAC,CAAKP,eAAe,CAAG,IAAI,CAAIP,UACzD,CAAC,CACD,GAAM,CAAAe,KAAK,CAAG,CACZC,EAAE,CAAEL,kBAAkB,CAACC,CAAC,CAAG,EAAE,CAC7BK,EAAE,CAAEN,kBAAkB,CAACG,CAAC,CAAG,EAAE,CAC7BI,EAAE,CAAEP,kBAAkB,CAACC,CAAC,CAAG,EAAE,CAC7BO,EAAE,CAAER,kBAAkB,CAACG,CAAC,CAAG,EAC7B,CAAC,CACDZ,WAAW,CAACG,OAAO,CAAC,SAACe,UAAU,CAAK,CAClC,GAAM,CAAAC,KAAK,CAAG,CACZL,EAAE,CAAEI,UAAU,CAACP,QAAQ,CAACD,CAAC,CAAG,CAAC,CAC7BK,EAAE,CAAEG,UAAU,CAACP,QAAQ,CAACC,CAAC,CAAG,CAAC,CAC7BI,EAAE,CAAEE,UAAU,CAACP,QAAQ,CAACD,CAAC,CAAG,CAAC,CAC7BO,EAAE,CAAEC,UAAU,CAACP,QAAQ,CAACC,CAAC,CAAG,CAC9B,CAAC,CACD,GAAIf,cAAc,CAACgB,KAAK,CAAEM,KAAK,CAAC,CAAE,CAChCjB,gBAAgB,CAACkB,IAAI,CAAC,CACpBC,YAAY,CAAEH,UAAU,CAACI,EAAE,CAC3BC,YAAY,CAAEnB,UAAU,CAACkB,EAC3B,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CACJ,CAAC,CAAC,CACF,MAAO,CAAApB,gBAAgB,CACzB,CAAC,CAED,cAAe,CAAAH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}