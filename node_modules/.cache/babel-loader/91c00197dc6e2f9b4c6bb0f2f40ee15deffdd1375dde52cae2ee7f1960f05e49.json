{"ast":null,"code":"import { createInterval, flyingObjectsStarterYAxis, maxFlyingObjects, flyingObjectsStarterPositions } from '../utils/constants';\nexport default (state => {\n  if (!state.gameState.started) return state; // game not running\n\n  const now = new Date().getTime();\n  const {\n    lastObjectCreatedAt,\n    flyingObjects\n  } = state.gameState;\n  const createNewObject = now - lastObjectCreatedAt.getTime() > createInterval && flyingObjects.length < maxFlyingObjects;\n  if (!createNewObject) return state; // no need to create objects now\n\n  const id = new Date().getTime();\n  const predefinedPosition = Math.floor(Math.random() * maxFlyingObjects);\n  const flyingObjectPosition = flyingObjectsStarterPositions[predefinedPosition];\n  const newFlyingObject = {\n    position: {\n      x: flyingObjectPosition,\n      y: flyingObjectsStarterYAxis\n    },\n    createdAt: new Date().getTime(),\n    id\n  };\n  return {\n    ...state,\n    gameState: {\n      ...state.gameState,\n      flyingObjects: [...state.gameState.flyingObjects, newFlyingObject],\n      lastObjectCreatedAt: new Date()\n    }\n  };\n});","map":{"version":3,"names":["createInterval","flyingObjectsStarterYAxis","maxFlyingObjects","flyingObjectsStarterPositions","state","gameState","started","now","Date","getTime","lastObjectCreatedAt","flyingObjects","createNewObject","length","id","predefinedPosition","Math","floor","random","flyingObjectPosition","newFlyingObject","position","x","y","createdAt"],"sources":["C:/Users/dibya/OneDrive/Desktop/VS code/Alien-Go-Home/src/reducers/createFlyingObjects.js"],"sourcesContent":["import {\r\n  createInterval, flyingObjectsStarterYAxis, maxFlyingObjects,\r\n  flyingObjectsStarterPositions\r\n} from '../utils/constants';\r\n\r\nexport default (state) => {\r\n  if ( ! state.gameState.started) return state; // game not running\r\n\r\n  const now = (new Date()).getTime();\r\n  const { lastObjectCreatedAt, flyingObjects } = state.gameState;\r\n  const createNewObject = (\r\n    now - (lastObjectCreatedAt).getTime() > createInterval &&\r\n    flyingObjects.length < maxFlyingObjects\r\n  );\r\n\r\n  if ( ! createNewObject) return state; // no need to create objects now\r\n\r\n  const id = (new Date()).getTime();\r\n  const predefinedPosition = Math.floor(Math.random() * maxFlyingObjects);\r\n  const flyingObjectPosition = flyingObjectsStarterPositions[predefinedPosition];\r\n  const newFlyingObject = {\r\n    position: {\r\n      x: flyingObjectPosition,\r\n      y: flyingObjectsStarterYAxis,\r\n    },\r\n    createdAt: (new Date()).getTime(),\r\n    id,\r\n  };\r\n\r\n  return {\r\n    ...state,\r\n    gameState: {\r\n      ...state.gameState,\r\n      flyingObjects: [\r\n        ...state.gameState.flyingObjects,\r\n        newFlyingObject\r\n      ],\r\n      lastObjectCreatedAt: new Date(),\r\n    }\r\n  }\r\n}"],"mappings":"AAAA,SACEA,cAAc,EAAEC,yBAAyB,EAAEC,gBAAgB,EAC3DC,6BAA6B,QACxB,oBAAoB;AAE3B,gBAAgBC,KAAK,IAAK;EACxB,IAAK,CAAEA,KAAK,CAACC,SAAS,CAACC,OAAO,EAAE,OAAOF,KAAK,CAAC,CAAC;;EAE9C,MAAMG,GAAG,GAAI,IAAIC,IAAI,EAAE,CAAEC,OAAO,EAAE;EAClC,MAAM;IAAEC,mBAAmB;IAAEC;EAAc,CAAC,GAAGP,KAAK,CAACC,SAAS;EAC9D,MAAMO,eAAe,GACnBL,GAAG,GAAIG,mBAAmB,CAAED,OAAO,EAAE,GAAGT,cAAc,IACtDW,aAAa,CAACE,MAAM,GAAGX,gBACxB;EAED,IAAK,CAAEU,eAAe,EAAE,OAAOR,KAAK,CAAC,CAAC;;EAEtC,MAAMU,EAAE,GAAI,IAAIN,IAAI,EAAE,CAAEC,OAAO,EAAE;EACjC,MAAMM,kBAAkB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGhB,gBAAgB,CAAC;EACvE,MAAMiB,oBAAoB,GAAGhB,6BAA6B,CAACY,kBAAkB,CAAC;EAC9E,MAAMK,eAAe,GAAG;IACtBC,QAAQ,EAAE;MACRC,CAAC,EAAEH,oBAAoB;MACvBI,CAAC,EAAEtB;IACL,CAAC;IACDuB,SAAS,EAAG,IAAIhB,IAAI,EAAE,CAAEC,OAAO,EAAE;IACjCK;EACF,CAAC;EAED,OAAO;IACL,GAAGV,KAAK;IACRC,SAAS,EAAE;MACT,GAAGD,KAAK,CAACC,SAAS;MAClBM,aAAa,EAAE,CACb,GAAGP,KAAK,CAACC,SAAS,CAACM,aAAa,EAChCS,eAAe,CAChB;MACDV,mBAAmB,EAAE,IAAIF,IAAI;IAC/B;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}