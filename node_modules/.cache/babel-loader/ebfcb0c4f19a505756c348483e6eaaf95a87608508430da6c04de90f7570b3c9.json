{"ast":null,"code":"export const pathFromBezierCurve = cubicBezierCurve => {\n  const {\n    initialAxis,\n    initialControlPoint,\n    endingControlPoint,\n    endingAxis\n  } = cubicBezierCurve;\n  return `\n    M${initialAxis.x} ${initialAxis.y}\n    c ${initialControlPoint.x} ${initialControlPoint.y}\n    ${endingControlPoint.x} ${endingControlPoint.y}\n    ${endingAxis.x} ${endingAxis.y}\n  `;\n};\nexport const radiansToDegrees = radians => radians * 180 / Math.PI;\n\n// https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\nexport const calculateAngle = (x1, y1, x2, y2) => {\n  if (x2 >= 0 && y2 >= 0) {\n    return 90;\n  } else if (x2 < 0 && y2 >= 0) {\n    return -90;\n  }\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1;\n};\nexport const getCanvasPosition = event => {\n  // mouse position on auto-scaling canvas\n  // https://stackoverflow.com/a/10298843/1232793\n\n  const svg = document.getElementById('aliens-go-home-canvas');\n  const point = svg.createSVGPoint();\n  point.x = event.clientX;\n  point.y = event.clientY;\n  const {\n    x,\n    y\n  } = point.matrixTransform(svg.getScreenCTM().inverse());\n  return {\n    x,\n    y\n  };\n};\nconst degreesToRadian = degrees => degrees * Math.PI / 180;\nexport const calculateNextPosition = function (x, y, angle) {\n  let divisor = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 300;\n  const realAngle = angle * -1 + 90;\n  const stepsX = radiansToDegrees(Math.cos(degreesToRadian(realAngle))) / divisor;\n  const stepsY = radiansToDegrees(Math.sin(degreesToRadian(realAngle))) / divisor;\n  return {\n    x: x + stepsX,\n    y: y - stepsY\n  };\n};\nexport const checkCollision = (rectA, rectB) => rectA.x1 < rectB.x2 && rectA.x2 > rectB.x1 && rectA.y1 < rectB.y2 && rectA.y2 > rectB.y1;","map":{"version":3,"names":["pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","x","y","radiansToDegrees","radians","Math","PI","calculateAngle","x1","y1","x2","y2","dividend","divisor","quotient","atan","getCanvasPosition","event","svg","document","getElementById","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","degreesToRadian","degrees","calculateNextPosition","angle","arguments","length","undefined","realAngle","stepsX","cos","stepsY","sin","checkCollision","rectA","rectB"],"sources":["C:/Users/dibya/OneDrive/Desktop/VS code/Alien-Go-Home/src/utils/formulas.js"],"sourcesContent":["export const pathFromBezierCurve = (cubicBezierCurve) => {\r\n  const {\r\n    initialAxis, initialControlPoint, endingControlPoint, endingAxis,\r\n  } = cubicBezierCurve;\r\n  return `\r\n    M${initialAxis.x} ${initialAxis.y}\r\n    c ${initialControlPoint.x} ${initialControlPoint.y}\r\n    ${endingControlPoint.x} ${endingControlPoint.y}\r\n    ${endingAxis.x} ${endingAxis.y}\r\n  `;\r\n};\r\n\r\nexport const radiansToDegrees = radians => ((radians * 180) / Math.PI);\r\n\r\n// https://math.stackexchange.com/questions/714378/find-the-angle-that-creating-with-y-axis-in-degrees\r\nexport const calculateAngle = (x1, y1, x2, y2) => {\r\n  if (x2 >= 0 && y2 >= 0) {\r\n    return 90;\r\n  } else if (x2 < 0 && y2 >= 0) {\r\n    return -90;\r\n  }\r\n\r\n  const dividend = x2 - x1;\r\n  const divisor = y2 - y1;\r\n  const quotient = dividend / divisor;\r\n  return radiansToDegrees(Math.atan(quotient)) * -1;\r\n};\r\n\r\nexport const getCanvasPosition = (event) => {\r\n  // mouse position on auto-scaling canvas\r\n  // https://stackoverflow.com/a/10298843/1232793\r\n\r\n  const svg = document.getElementById('aliens-go-home-canvas');\r\n  const point = svg.createSVGPoint();\r\n\r\n  point.x = event.clientX;\r\n  point.y = event.clientY;\r\n  const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\r\n  return {x, y};\r\n};\r\n\r\nconst degreesToRadian = degrees => ((degrees * Math.PI) / 180);\r\n\r\nexport const calculateNextPosition = (x, y, angle, divisor = 300) => {\r\n  const realAngle = (angle * -1) + 90;\r\n  const stepsX = radiansToDegrees(Math.cos(degreesToRadian(realAngle))) / divisor;\r\n  const stepsY = radiansToDegrees(Math.sin(degreesToRadian(realAngle))) / divisor;\r\n  return {\r\n    x: x +stepsX,\r\n    y: y - stepsY,\r\n  }\r\n};\r\n\r\nexport const checkCollision = (rectA, rectB) => (\r\n  rectA.x1 < rectB.x2 && rectA.x2 > rectB.x1 &&\r\n  rectA.y1 < rectB.y2 && rectA.y2 > rectB.y1\r\n);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}