{"ast":null,"code":"export const radiansToDegrees = radians => radians * 180 / Math.PI;\nexport const pathFromBezierCurve = cubicBezierCurve => {\n  const {\n    initialAxis,\n    initialControlPoint,\n    endingControlPoint,\n    endingAxis\n  } = cubicBezierCurve;\n  return `\n      M${initialAxis.x} ${initialAxis.y}\n      c ${initialControlPoint.x} ${initialControlPoint.y}\n      ${endingControlPoint.x} ${endingControlPoint.y}\n      ${endingAxis.x} ${endingAxis.y}\n    `;\n};\nexport const calculateAngle = (x1, y1, x2, y2) => {\n  if (x2 >= 0 && y2 >= 0) {\n    return 90;\n  } else if (x2 < 0 && y2 >= 0) {\n    return -90;\n  }\n  const dividend = x2 - x1;\n  const divisor = y2 - y1;\n  const quotient = dividend / divisor;\n  return radiansToDegrees(Math.atan(quotient)) * -1;\n};\nexport const getCanvasPosition = event => {\n  const svg = document.getElementById('aliens-go-home-canvas');\n  const point = svg.createSVGPoint();\n  point.x = event.clientX;\n  point.y = event.clientY;\n  const {\n    x,\n    y\n  } = point.matrixTransform(svg.getScreenCTM().inverse());\n  return {\n    x,\n    y\n  };\n};","map":{"version":3,"names":["radiansToDegrees","radians","Math","PI","pathFromBezierCurve","cubicBezierCurve","initialAxis","initialControlPoint","endingControlPoint","endingAxis","x","y","calculateAngle","x1","y1","x2","y2","dividend","divisor","quotient","atan","getCanvasPosition","event","svg","document","getElementById","point","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse"],"sources":["C:/Users/dibya/OneDrive/Desktop/VS code/aliens-go-home/src/utils/formulas.js"],"sourcesContent":["export const radiansToDegrees = radians => ((radians * 180) / Math.PI);\r\n\r\n\r\nexport const pathFromBezierCurve = (cubicBezierCurve) => {\r\n    const {\r\n      initialAxis, initialControlPoint, endingControlPoint, endingAxis,\r\n    } = cubicBezierCurve;\r\n    return `\r\n      M${initialAxis.x} ${initialAxis.y}\r\n      c ${initialControlPoint.x} ${initialControlPoint.y}\r\n      ${endingControlPoint.x} ${endingControlPoint.y}\r\n      ${endingAxis.x} ${endingAxis.y}\r\n    `;\r\n  };\r\n\r\n  export const calculateAngle = (x1, y1, x2, y2) => {\r\n    if (x2 >= 0 && y2 >= 0) {\r\n      return 90;\r\n    } else if (x2 < 0 && y2 >= 0) {\r\n      return -90;\r\n    }\r\n  \r\n    const dividend = x2 - x1;\r\n    const divisor = y2 - y1;\r\n    const quotient = dividend / divisor;\r\n    return radiansToDegrees(Math.atan(quotient)) * -1;\r\n  };\r\n\r\n  export const getCanvasPosition = (event) => {\r\n\r\n    const svg = document.getElementById('aliens-go-home-canvas');\r\n    const point = svg.createSVGPoint();\r\n  \r\n    point.x = event.clientX;\r\n    point.y = event.clientY;\r\n    const { x, y } = point.matrixTransform(svg.getScreenCTM().inverse());\r\n    return {x, y};\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGC,OAAO,IAAMA,OAAO,GAAG,GAAG,GAAIC,IAAI,CAACC,EAAG;AAGtE,OAAO,MAAMC,mBAAmB,GAAIC,gBAAgB,IAAK;EACrD,MAAM;IACJC,WAAW;IAAEC,mBAAmB;IAAEC,kBAAkB;IAAEC;EACxD,CAAC,GAAGJ,gBAAgB;EACpB,OAAQ;AACZ,SAASC,WAAW,CAACI,CAAE,IAAGJ,WAAW,CAACK,CAAE;AACxC,UAAUJ,mBAAmB,CAACG,CAAE,IAAGH,mBAAmB,CAACI,CAAE;AACzD,QAAQH,kBAAkB,CAACE,CAAE,IAAGF,kBAAkB,CAACG,CAAE;AACrD,QAAQF,UAAU,CAACC,CAAE,IAAGD,UAAU,CAACE,CAAE;AACrC,KAAK;AACH,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,KAAK;EAChD,IAAID,EAAE,IAAI,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAE;IACtB,OAAO,EAAE;EACX,CAAC,MAAM,IAAID,EAAE,GAAG,CAAC,IAAIC,EAAE,IAAI,CAAC,EAAE;IAC5B,OAAO,CAAC,EAAE;EACZ;EAEA,MAAMC,QAAQ,GAAGF,EAAE,GAAGF,EAAE;EACxB,MAAMK,OAAO,GAAGF,EAAE,GAAGF,EAAE;EACvB,MAAMK,QAAQ,GAAGF,QAAQ,GAAGC,OAAO;EACnC,OAAOlB,gBAAgB,CAACE,IAAI,CAACkB,IAAI,CAACD,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AACnD,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAIC,KAAK,IAAK;EAE1C,MAAMC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,uBAAuB,CAAC;EAC5D,MAAMC,KAAK,GAAGH,GAAG,CAACI,cAAc,EAAE;EAElCD,KAAK,CAAChB,CAAC,GAAGY,KAAK,CAACM,OAAO;EACvBF,KAAK,CAACf,CAAC,GAAGW,KAAK,CAACO,OAAO;EACvB,MAAM;IAAEnB,CAAC;IAAEC;EAAE,CAAC,GAAGe,KAAK,CAACI,eAAe,CAACP,GAAG,CAACQ,YAAY,EAAE,CAACC,OAAO,EAAE,CAAC;EACpE,OAAO;IAACtB,CAAC;IAAEC;EAAC,CAAC;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}